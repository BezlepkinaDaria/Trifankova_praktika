// –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä, —Ñ–∞–±—Ä–∏—á–Ω—ã–π –º–µ—Ç–æ–¥, –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å, —à–∞–±–ª–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥
package pr9;

import java.util.ArrayList;
import java.util.List;

// –ë–∞–∑–æ–≤—ã–π –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –∫–ª–∞—Å—Å –∫—É—Ä—Å–∞
abstract class Course {                      // !!! —à–∞–±–ª–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥
    protected String title;
    protected String description;
    protected List<Student> enrolledStudents;
    protected List<String> lessons;

    public Course(String title, String description) {
        this.title = title;
        this.description = description;
        this.enrolledStudents = new ArrayList<>();
        this.lessons = new ArrayList<>();
    }

    public void enrollStudent(Student student) {
        if (!enrolledStudents.contains(student)) {
            enrolledStudents.add(student);
            student.enrollInCourse(this);
        }
    }

    public void addLesson(String lesson) {
        lessons.add(lesson);
        notifyStudents(lesson);
    }

    public abstract void displayInfo();                 // !!! —à–∞–±–ª–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥

    protected void notifyStudents(String lesson) {      // !!! –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å
        for (Student student : enrolledStudents) {
            student.update(this, lesson);
        }
    }

    public String getTitle() {
        return title;
    }

    public List<String> getLessons() {
        return lessons;
    }
}

// –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∫–ª–∞—Å—Å—ã –∫—É—Ä—Å–æ–≤
class ProgrammingCourse extends Course {
    public ProgrammingCourse(String title, String description) {
        super(title, description);
    }

    @Override
    public void displayInfo() {
        System.out.println("üíª –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ: " + title);
        System.out.println("   –û–ø–∏—Å–∞–Ω–∏–µ: " + description);
        System.out.println("   –°—Ç—É–¥–µ–Ω—Ç–æ–≤: " + enrolledStudents.size());
        System.out.println("   –£—Ä–æ–∫–æ–≤: " + lessons.size());
    }
}

class DesignCourse extends Course {
    public DesignCourse(String title, String description) {
        super(title, description);
    }

    @Override
    public void displayInfo() {
        System.out.println("üé® –î–∏–∑–∞–π–Ω: " + title);
        System.out.println("   –û–ø–∏—Å–∞–Ω–∏–µ: " + description);
        System.out.println("   –°—Ç—É–¥–µ–Ω—Ç–æ–≤: " + enrolledStudents.size());
        System.out.println("   –£—Ä–æ–∫–æ–≤: " + lessons.size());
    }
}

class LanguageCourse extends Course {
    public LanguageCourse(String title, String description) {
        super(title, description);
    }

    @Override
    public void displayInfo() {
        System.out.println("üî§ –Ø–∑—ã–∫–æ–≤–æ–π –∫—É—Ä—Å: " + title);
        System.out.println("   –û–ø–∏—Å–∞–Ω–∏–µ: " + description);
        System.out.println("   –°—Ç—É–¥–µ–Ω—Ç–æ–≤: " + enrolledStudents.size());
        System.out.println("   –£—Ä–æ–∫–æ–≤: " + lessons.size());
    }
}

// –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –∫—É—Ä—Å–æ–≤ !!!
abstract class CourseDecorator extends Course {
    protected Course decoratedCourse;

    public CourseDecorator(Course course) {
        super(course.title, course.description);
        this.decoratedCourse = course;
        this.enrolledStudents = course.enrolledStudents;
        this.lessons = course.lessons;
    }

    @Override
    public abstract void displayInfo();
}

// –î–µ–∫–æ—Ä–∞—Ç–æ—Ä —Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º
class CertificateCourse extends CourseDecorator {
    public CertificateCourse(Course course) {
        super(course);
    }

    @Override
    public void displayInfo() {
        decoratedCourse.displayInfo();
        System.out.println("   ‚≠ê –í–∫–ª—é—á–∞–µ—Ç —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏");
    }

    @Override
    public void enrollStudent(Student student) {
        super.enrollStudent(student);
        System.out.println("   üìù –°—Ç—É–¥–µ–Ω—Ç " + student.getName() + " –ø–æ–ª—É—á–∏—Ç —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫—É—Ä—Å–∞");
    }
}

// –§–∞–±—Ä–∏–∫–∞ –∫—É—Ä—Å–æ–≤ !!!
class CourseFactory {
    public static Course createCourse(String type, String title, String description) {
        switch (type.toLowerCase()) {
            case "programming":
                return new ProgrammingCourse(title, description);
            case "design":
                return new DesignCourse(title, description);
            case "language":
                return new LanguageCourse(title, description);
            default:
                throw new IllegalArgumentException("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –∫—É—Ä—Å–∞: " + type);
        }
    }
}