// –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–∞–ª–æ–≥–æ–º —Ñ–∞–π–ª–æ–≤, –≥–¥–µ –ø–∞–ø–∫–∏ –∏ —Ñ–∞–π–ª—ã –æ–±—Ä–∞–∑—É—é—Ç –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É.
// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —à–∞–±–ª–æ–Ω Composite, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –æ–¥–∏–Ω–∞–∫–æ–≤–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ñ–∞–π–ª–∞–º–∏ –∏ –ø–∞–ø–∫–∞–º–∏.

package pr11;

import java.util.ArrayList;
import java.util.List;

// –ë–∞–∑–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
interface FileSystemComponent {
    String getName();
    void display(String indent);
    long getSize();
}

// –õ–∏—Å—Ç–æ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç - —Ñ–∞–π–ª
class File implements FileSystemComponent {
    private final String name;
    private final long size;

    public File(String name, long size) {
        this.name = name;
        this.size = size;
    }

    @Override
    public String getName() {
        return name;
    }

    @Override
    public void display(String indent) {
        System.out.println(indent + "üìÑ " + name + " (" + size + " bytes)");
    }

    @Override
    public long getSize() {
        return size;
    }
}

// –ö–æ–º–ø–æ–∑–∏—Ç–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç - –ø–∞–ø–∫–∞
class Folder implements FileSystemComponent {
    private final String name;
    private final List<FileSystemComponent> children;

    public Folder(String name) {
        this.name = name;
        this.children = new ArrayList<>();
    }

    @Override
    public String getName() {
        return name;
    }

    @Override
    public void display(String indent) {
        System.out.println(indent + "üìÅ " + name + " (" + getSize() + " bytes)");
        for (FileSystemComponent component : children) {
            component.display(indent + "  ");
        }
    }

    @Override
    public long getSize() {
        long totalSize = 0;
        for (FileSystemComponent component : children) {
            totalSize += component.getSize();
        }
        return totalSize;
    }

    // –ú–µ—Ç–æ–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–µ—Ç—å–º–∏
    public void add(FileSystemComponent component) {
        children.add(component);
    }

    public void remove(FileSystemComponent component) {
        children.remove(component);
    }

    public List<FileSystemComponent> getChildren() {
        return children;
    }
}

// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –ø–∞—Ç—Ç–µ—Ä–Ω–∞ Composite                                                  // !!!
class FileSystemDemo {
    public static void main(String[] args) {
        // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª—ã
        FileSystemComponent file1 = new File("document.txt", 1500);
        FileSystemComponent file2 = new File("image.jpg", 2500);
        FileSystemComponent file3 = new File("program.java", 3000);
        FileSystemComponent file4 = new File("readme.md", 500);

        // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏
        Folder documents = new Folder("Documents");
        Folder pictures = new Folder("Pictures");
        Folder projects = new Folder("Projects");
        Folder root = new Folder("Root");

        // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–∏
        documents.add(file1);
        documents.add(file4);

        pictures.add(file2);

        projects.add(file3);

        // –°–æ–∑–¥–∞–µ–º –≤–ª–æ–∂–µ–Ω–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        root.add(documents);
        root.add(pictures);
        root.add(projects);

        // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –Ω–∞–ø—Ä—è–º—É—é –≤ –∫–æ—Ä–µ–Ω—å
        FileSystemComponent file5 = new File("config.ini", 200);
        root.add(file5);

        // –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∞–ø–∫—É –≤–Ω—É—Ç—Ä–∏ Projects
        Folder src = new Folder("src");
        FileSystemComponent file6 = new File("Main.java", 1200);
        src.add(file6);
        projects.add(src);

        // –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É —Å –¥—Ä–µ–≤–æ–≤–∏–¥–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
        System.out.println("=== –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã ===");
        root.display("");

        System.out.println("\n=== –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑–º–µ—Ä–∞—Ö ===");
        System.out.println("–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏: " + root.getSize() + " bytes");
        System.out.println("–†–∞–∑–º–µ—Ä –ø–∞–ø–∫–∏ Documents: " + documents.getSize() + " bytes");
        System.out.println("–†–∞–∑–º–µ—Ä –ø–∞–ø–∫–∏ Projects: " + projects.getSize() + " bytes");
        System.out.println("–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ document.txt: " + file1.getSize() + " bytes");

        // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
        System.out.println("\n=== –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ ===");
        processComponent(root, "");
    }

    // –ú–µ—Ç–æ–¥, –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—â–∏–π –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–Ω—É—é —Ä–∞–±–æ—Ç—É —Å –ª—é–±—ã–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–º
    public static void processComponent(FileSystemComponent component, String prefix) {                   // !!!
        System.out.println(prefix + "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: " + component.getName());
        System.out.println(prefix + "–†–∞–∑–º–µ—Ä: " + component.getSize() + " bytes");

        // –ï—Å–ª–∏ —ç—Ç–æ –ø–∞–ø–∫–∞, –º–æ–∂–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –µ—ë –¥–µ—Ç–µ–π
        if (component instanceof Folder) {
            Folder folder = (Folder) component;
            for (FileSystemComponent child : folder.getChildren()) {
                processComponent(child, prefix + "  ");
            }
        }
    }
}